/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package fr.cod.gcalendar.desktop;

import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;

import org.junit.Test;
import fr.cod.gcalendar.desktop.GCalDateUtils;
import static org.junit.Assert.*;

public class GCalDateUtilsTest {
	@Test
	public void testDate() throws IOException {
		assertNotNull("app should have a response", GCalDateUtils.getDateTime("1011"));
		assertEquals("31/12/20..", "2020-12-31T00:00:00.000+01:00", GCalDateUtils.getDateTime("3112").toString());
		assertEquals("01/01/20..", "2021-01-01T00:00:00.000+01:00", GCalDateUtils.getDateTime("0101").toString());
		assertEquals("05/09/1990", "1990-09-05T00:00:00.000+02:00", GCalDateUtils.getDateTime("05091990").toString());
		assertEquals("17/03/2020", "2020-03-17T00:00:00.000+01:00", GCalDateUtils.getDateTime("170320").toString());
	}

	@Test
	public void ajouteJours() throws Exception {
		DateFormat df = new SimpleDateFormat("dd/MM/yyyy", Locale.FRENCH);
		assertEquals(df.parse("02/01/2010"), GCalDateUtils.ajouteJours(df.parse("01/01/2010"), 1));
		assertEquals(df.parse("01/10/2010"), GCalDateUtils.ajouteJours(df.parse("30/09/2010"), 1));
		assertEquals(df.parse("01/01/2013"), GCalDateUtils.ajouteJours(df.parse("31/12/2012"), 1));
		assertEquals(df.parse("31/03/2018"), GCalDateUtils.ajouteJours(df.parse("01/04/2018"), -1));
		assertEquals(df.parse("31/12/2018"), GCalDateUtils.ajouteJours(df.parse("01/01/2019"), -1));
	}

}
